#!/usr/bin/env python

from utils import color, pathutils, logutils
from preprocessor import preprocessor
import os
import stat
import sys

class SystemDgen():
    def __init__(self, template=None, *args, **kwargs):
        self.scrpath = "/etc/systemd/system/"
        self.template = pathutils.templatepath() + "/templates/systemd_service.txt" 
        if template: self.template = template #I would love to use kwargs here but they dont resort to default value if kwarg is none...
    def SystemDgen(self, scrpath: str):
        print(color.Colors().brgreen +  "[+] Generating for SystemD" + color.Colors().reset)
        template_file = open(self.template, 'r')

        template = template_file.read()

        fin = preprocessor.proprocess_template(template, scrpath)
        service_name = preprocessor.get_prog_name(scrpath)

        logutils.good(f"[+] Template filling done ! Creating script in {self.scrpath}{service_name}")
        if os.path.exists(f'{self.scrpath}{service_name}'):
            logutils.red("!!! There is already a script at the path automatially generated by mekanism!!! ")
            ans = input("Owerwrite?: ")
            if ans.lower() not in ("y", "yes"):
                sys.exit(0)

        scr = open(f"{self.scrpath}{service_name}.service", 'w')

        logutils.good(f"[+] Writing generated script to {self.scrpath}{service_name}")
        scr.write(fin)
        scr.close()

        logutils.good("[+] Init script written successfully! Would you like to check it out? [Y/n]")
        ans = input()

        if ans.lower() in ("y", "yes"):
            scr = open(f"{self.scrpath}{service_name}.service", 'r')
            print(scr.read())


        
